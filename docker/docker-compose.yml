version: '2.1'
services:
    db-node-1:
      build:
        context: mysql
        dockerfile: Dockerfile
      container_name: db-node-1
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: archdb
        MYSQL_USER: stud
        MYSQL_PASSWORD: stud
        MYSQL_ROOT_PASSWORD: '1'
      command: >
        --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
        --general-log=ON
        --log-queries-not-using-indexes=ON
      networks:
        - arch-network
      ports:
        - 3360:3306
      healthcheck:
        test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
        timeout: 20s
        retries: 5
      volumes:
        - db-node-1-data:/var/lib/mysql
    kafka1:
      image: 'bitnami/kafka:latest'
      container_name: kafka1
      ports:
      #   - "2181:2181"
         - "9092:9092"
      #   - "9093:9093"
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
        KAFKA_BROKER_ID: 1
        KAFKA_CFG_NODE_ID: 1
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
      volumes:
        - kafka_volume1:/bitnami/kafka
      networks:
        - arch-network
    
    kafka2:
      image: 'bitnami/kafka:latest'
      container_name: kafka2
      # ports:
      #   - "2181:2181"
      #   - "9092:9092"
      #   - "9093:9093"
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
        KAFKA_BROKER_ID: 2
        KAFKA_CFG_NODE_ID: 2
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
      volumes:
        - kafka_volume2:/bitnami/kafka
      networks:
        - arch-network

    kafka-ui:
      image: provectuslabs/kafka-ui:v0.4.0
      ports:
        - "8888:8080"
      environment:
        KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092"
        KAFKA_CLUSTERS_0_NAME: "kraft"
      networks:
        - arch-network
    
    my_service:
      build:
        context: my_service
        dockerfile: Dockerfile
      container_name: my_service
      environment:
        - DB_HOST=db-node-1
        - DB_PORT=3306
        - DB_LOGIN=stud
        - DB_PASSWORD=stud
        - DB_DATABASE=archdb
        - QUEUE_HOST=kafka1:9092
        - QUEUE_TOPIC=event_server
        - QUEUE_GROUP_ID=0
      ports:
        - 8080:8080
      networks:
        - arch-network
      # depends_on:
      #   db-node-1:
      #     condition: service_healthy
        
    my_writer:
      build:
        context: my_writer
        dockerfile: Dockerfile
      container_name: my_writer
      environment:
        - DB_HOST=db-node-1
        - DB_PORT=3306
        - DB_LOGIN=stud
        - DB_PASSWORD=stud
        - DB_DATABASE=archdb
        - QUEUE_HOST=kafka1:9092
        - QUEUE_TOPIC=event_server
        - QUEUE_GROUP_ID=0
      networks:
        - arch-network
      depends_on:
        - kafka1
        - db-node-1


networks:
  arch-network:
    driver: "bridge"
    external: false

volumes:
  db-node-1-data:
  kafka_volume1:
  kafka_volume2: